/*
PatentsView Dataset Exploration
Skills used: Joins, CTE's, Windows Functions, Aggregate Functions, Work with big datasets
*/


-- Count general amount of patents by year

SELECT 
      EXTRACT (year from date (date)) AS year,
      COUNT (id) AS amount
FROM  `patents-public-data.patentsview.patent`
WHERE EXTRACT (year from date (date)) < 2021
GROUP BY year
ORDER BY year;


-- Overview of inventional / additional categories

-- (Note: a single patent may belong to several sections, which also causes duplication in categories)
-- Need CTE to make unique values

WITH unique_category_patent_rows AS
(SELECT p.id as id,
  c.category AS category
FROM `patents-public-data.patentsview.patent` p
  LEFT JOIN `patents-public-data.patentsview.cpc_current` c
    ON p.id = c.patent_id
WHERE EXTRACT (year from date (date)) < 2021
GROUP BY category, id)

SELECT category, COUNT (id) AS amount
FROM unique_category_patent_rows
GROUP BY category;


-- TOP 20 countries by amount of patents

--This reflects which countries are most actively involved in the patents creation.

-- (Note: One patent may have creators from several countries)
--That is why amount of rows in this data is bigger than overal amount of patents
--Data has a lot of duplicates, so CTE here is needed to create uniq rows

WITH uniq_country_patent_rows AS

  (SELECT DISTINCT l.country AS country, p.id as patent
  FROM  `patents-public-data.patentsview.patent` p
  LEFT JOIN
    `patents-public-data.patentsview.patent_inventor_201908` mp
    ON p.id = mp.patent_id
  LEFT JOIN
  `patents-public-data.patentsview.location_inventor_201908` ml  
      ON mp.inventor_id = ml.inventor_id
    LEFT JOIN `patents-public-data.patentsview.location_201908` l
      ON ml.location_id = l.id
  WHERE EXTRACT (year from date (date)) < 2021 AND l.country IS NOT NULL
  GROUP by country, patent
  ORDER BY patent)

SELECT country, COUNT (*) AS amount
FROM uniq_country_patent_rows
GROUP BY country
ORDER BY amount DESC
LIMIT 20;


-- Count amount of inventors by gender by year

-- This reflects trends in gender distribution among inventors

SELECT 
  EXTRACT (year from date (p.date)) AS year,
  i.male_flag AS male,
  COUNT (p.id) AS amount
FROM `patents-public-data.patentsview.patent` p
  LEFT JOIN `patents-public-data.patentsview.patent_inventor` m
    ON p.id = m.patent_id
  LEFT JOIN `patents-public-data.patentsview.inventor` i
    ON m.inventor_id = i.id 
WHERE EXTRACT (year from date (date)) < 2021
GROUP BY year, male
ORDER BY year, male;


-- Number of patents by section per year

-- Will be used to create trends for the most popular sections by year
-- (Note: one patent may belong to several sections)

WITH gathered_data AS (

  SELECT 
        EXTRACT (year from date (p.date)) AS year,
        p.id AS patents,
        s.string_field_1 AS section
  FROM  `patents-public-data.patentsview.cpc_current` AS ms
        LEFT JOIN   
        `patentview-project.patentsview_my_datasets.cpc_section` AS s
          ON ms.section_id = s.string_field_0
        LEFT JOIN 
          `patents-public-data.patentsview.patent` AS p
          ON p.id = ms.patent_id
  WHERE EXTRACT (year from date (p.date)) < 2021
  GROUP BY year, patents, section
)


SELECT *
FROM
(
    SELECT 
        year, 
        section, 
        COUNT (patents) AS amount_of_patents,
        ROW_NUMBER() OVER (PARTITION BY year ORDER BY COUNT (patents) DESC) AS rank
    FROM gathered_data
    GROUP BY year, section
)
ORDER BY year, amount_of_patents DESC;


-- Amount of patents by section + subsection per year 

-- Will be used to create trends for the most popular subsection by year
-- (Note: one patent may belong to several sections)

WITH gathered_data2 AS (

  SELECT 
        EXTRACT (year from date (p.date)) AS year,
        p.id AS patents,
        s.string_field_1 AS section,
        ss.title AS subsection
  FROM  `patents-public-data.patentsview.cpc_current` AS ms
        LEFT JOIN   
        `patentview-project.patentsview_my_datasets.cpc_section` AS s
          ON ms.section_id = s.string_field_0
        LEFT JOIN
        `patents-public-data.patentsview.cpc_subsection` AS ss
          ON ms.subsection_id = ss.id
        LEFT JOIN 
          `patents-public-data.patentsview.patent` AS p
          ON p.id = ms.patent_id
  WHERE EXTRACT (year from date (p.date)) < 2021          
  GROUP BY year, patents, section, subsection
)


SELECT *
FROM
(
    SELECT 
        year, 
        section, 
        subsection,
        COUNT (patents) AS amount_of_patents,
        ROW_NUMBER() OVER (PARTITION BY year ORDER BY COUNT (patents) DESC) AS rank
    FROM gathered_data2
    GROUP BY year, section, subsection
)
ORDER BY year, amount_of_patents DESC;
